if [ -z "${ROOTDIR}" ]; then
    echo 'ERROR ROOTDIR not defined'
    return 1
fi
if [ -z "${CXX_COMPILER}" ]; then
    echo 'ERROR CXX_COMPILER not defined'
    return 1
fi
if [ -z "${C_COMPILER}" ]; then
    echo 'ERROR C_COMPILER not defined'
    return 1
fi
if [ -z "${FORTRAN_COMPILER}" ]; then
    echo 'ERROR C_COMPILER not defined'
    return 1
fi
if [ -z "${CMAKE}" ]; then
    echo 'ERROR CMAKE not defined'
    return 1
fi
if [ -z "${MAKE_NUM_THREADS}" ]; then
    echo 'ERROR MAKE_NUM_THREADS not defined'
    return 1
fi

# --------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------
# ------------------------------------- C PACKAGES -------------------------------------
# --------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------

# --------------------------------------------------------------------------------------
# ---------------------------------------- FFTW ----------------------------------------
# --------------------------------------------------------------------------------------
if [ -z "${IGNORE_C_FFTW_INSTALLATION}" ]; then
  echo 'INSTALLING C FFTW LIBRARY - THIS MIGHT TAKE A WHILE'

  if [ -z "${FFTW_NEW_VERSION}" ]; then
    cd $ROOTDIR/../cocoa_installation_libraries/fftw-3.3.8
  else
    cd $ROOTDIR/../cocoa_installation_libraries/fftw-3.3.10
  fi

  if [ -z "${DEBUG_C_PACKAGES}" ]; then
    FC=$FORTRAN_COMPILER CC=$C_COMPILER ./configure --enable-openmp \
    --prefix=$ROOTDIR/.local --enable-shared=yes --enable-static=yes > /dev/null 2> /dev/null
    if [ $? -eq 0 ]; then
      echo "FFTW CONFIGURE RUN DONE"
    else
      echo "FFTW COULD NOT RUN CONFIGURE - CHECK SETUP_C_PACKAGES SCRIPT" >&2
      return 1
    fi

    make -j $MAKE_NUM_THREADS all > /dev/null 2> /dev/null
    if [ $? -eq 0 ]; then
      echo "FFTW MAKE RUN DONE"
    else
      echo "FFTW COULD NOT RUN MAKE - CHECK SETUP_C_PACKAGES SCRIPT" >&2
      return 1
    fi

    make install > /dev/null 2> /dev/null
    if [ $? -eq 0 ]; then
      echo "FFTW MAKE INSTALL RUN DONE"
    else
      echo "FFTW COULD NOT RUN MAKE INSTALL - CHECK SETUP_C_PACKAGES SCRIPT" >&2
      return 1
    fi
  else
    FC=$FORTRAN_COMPILER CC=$C_COMPILER ./configure --enable-openmp \
    --prefix=$ROOTDIR/.local --enable-shared=yes --enable-static=yes
    
    make all
    make install
  fi

  cd $ROOTDIR
fi

# --------------------------------------------------------------------------------------
# --------------------------------------- CFITSIO --------------------------------------
# --------------------------------------------------------------------------------------
if [ -z "${IGNORE_C_CFITSIO_INSTALLATION}" ]; then
  echo 'INSTALLING C CFITSIO LIBRARY - THIS MIGHT TAKE A WHILE'

  cd $ROOTDIR/../cocoa_installation_libraries/cfitsio-3.47

  rm -f CMakeCache.txt

  if [ -z "${DEBUG_C_PACKAGES}" ]; then
    $CMAKE -DBUILD_SHARED_LIBS=TRUE -DCMAKE_INSTALL_PREFIX=$ROOTDIR/.local \
    -DCMAKE_C_COMPILER=$C_COMPILER -DCMAKE_CXX_COMPILER=$CXX_COMPILER \
    -DCMAKE_FC_COMPILER=FORTRAN_COMPILER --log-level=ERROR .  > /dev/null 2> /dev/null
    if [ $? -eq 0 ]; then
      echo "CFITSIO CMAKE RUN DONE"
    else
      echo "CFITSIO COULD NOT RUN CMAKE - CHECK SETUP_C_PACKAGES SCRIPT" >&2
      return 1
    fi

    make -j $MAKE_NUM_THREADS all > /dev/null 2> /dev/null
    if [ $? -eq 0 ]; then
      echo "CFITSIO MAKE RUN DONE"
    else
      echo "CFITSIO COULD NOT RUN MAKE - CHECK SETUP_C_PACKAGES SCRIPT" >&2
      return 1
    fi

    make install > /dev/null 2> /dev/null
    if [ $? -eq 0 ]; then
      echo "CFITSIO MAKE INSTALL RUN DONE"
    else
      echo "CFITSIO COULD NOT RUN MAKE INSTALL - CHECK SETUP_C_PACKAGES SCRIPT" >&2
      return 1
    fi
  else
    $CMAKE -DBUILD_SHARED_LIBS=TRUE -DCMAKE_INSTALL_PREFIX=$ROOTDIR/.local \
    -DCMAKE_C_COMPILER=$C_COMPILER -DCMAKE_CXX_COMPILER=$CXX_COMPILER \
    -DCMAKE_FC_COMPILER=FORTRAN_COMPILER --log-level=ERROR .

    make all
    make install
  fi

  cd $ROOTDIR
fi

# --------------------------------------------------------------------------------------
# ----------------------------------------- GSL ----------------------------------------
# --------------------------------------------------------------------------------------
if [ -z "${IGNORE_C_GSL_INSTALLATION}" ]; then
  echo 'INSTALLING C GSL LIBRARY - THIS MIGHT TAKE A WHILE'

  cd $ROOTDIR/../cocoa_installation_libraries/gsl-2.7/

  if [ -z "${DEBUG_C_PACKAGES}" ]; then
    CC=$C_COMPILER ./configure --prefix=$ROOTDIR/.local --enable-shared=yes \
    --enable-static=yes > /dev/null 2> /dev/null
    if [ $? -eq 0 ] 
    then
      echo "GSL CONFIGURE RUN DONE"
    else
      echo "GSL COULD NOT RUN CONFIGURE - CHECK SETUP_C_PACKAGES SCRIPT" >&2
      return 1
    fi

    make -j $MAKE_NUM_THREADS all > /dev/null 2> /dev/null
    if [ $? -eq 0 ]; then
      echo "GSL MAKE RUN DONE"
    else
      echo "GSL COULD NOT RUN MAKE - CHECK SETUP_C_PACKAGES SCRIPT" >&2
      return 1
    fi

    make install > /dev/null 2> /dev/null
    if [ $? -eq 0 ]; then
      echo "MAKE INSTALL GSL OK"
    else
      echo "GSL COULD NOT RUN MAKE INSTALL - CHECK SETUP_C_PACKAGES SCRIPT" >&2
      return 1
    fi
  else
    CC=$C_COMPILER ./configure --prefix=$ROOTDIR/.local --enable-shared=yes \
    --enable-static=yes
    
    make all
    make install
  fi

  cd $ROOTDIR
fi

# --------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------